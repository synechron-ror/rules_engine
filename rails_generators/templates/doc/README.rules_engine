***************************************************** 
*** install the supporting gems

sudo gem install will_paginate acts_as_list


***************************************************** 
*** setup the test environment for rspec and cucumber

./script/generate rspec
./script/generate cucumber --rspec


***************************************************** 
*** add the gems, pipeline observer and add the RulesEngine discovery method
*** EDIT config/environment.rb

Rails::Initializer.run do |config|
  ...
  config.gem 'rules_engine'
  config.gem 'will_paginate'
  config.gem 'acts_as_list'
  ...
  config.active_record.observers = :re_pipeline_activated_observer
  ...
end
  
RulesEngine::Discovery.discover!


***************************************************** 
*** define the cache for the rules engine
*** EDIT config/environments/production.rb
*** EDIT config/environments/development.rb
*** EDIT config/environments/test.rb

RulesEngine::Cache.cache_store = :mem_cache_store, "localhost:11210"
  #   RulesEngine::Cache.cache_store = :mem_cache_store, "localhost:11210"
  #   RulesEngine::Cache.cache_store = :memory_store
  #   RulesEngine::Cache.cache_store = :file_store, "/path/to/cache/directory"
  #   RulesEngine::Cache.cache_store = :drb_store, "druby://localhost:9192"
  #   RulesEngine::Cache.cache_store = :mem_cache_store, "localhost"
  #   RulesEngine::Cache.cache_store = MyOwnStore.new("parameter")


***************************************************** 
*** setup the test and cucumber environments  
*** EDIT config/environments/test.rb
*** EDIT config/environments/cucumber.rb

  config.gem "rspec",             :version => '>=1.3.0', :lib => false
  config.gem "rspec-rails",       :version => '>=1.3.2', :lib => false
  config.gem "faker",             :version => '>=0.3.1', :lib => false

  config.gem "machinist",         :version => '>=1.0.6', :lib => false
  config.gem 'rcov',              :version => '>=0.9.8', :lib => false
  config.gem 'remarkable_rails',  :version => '>=3.1.13', :lib => false

  require 'machinist/active_record'
  require 'sham'
  require 'faker'
  require 'remarkable_rails'


***************************************************** 
*** add the rules engine routes
*** EDIT config/routes.rb

ActionController::Routing::Routes.draw do |map|

  ...
  ### map.root :controller => 're_pipelines', :action => 'template'
  ### map.preview '/preview', :controller => 're_pipelines', :action => 'template'
  map.resources :re_pipelines, :collection => {:lookup => :get, :activate_all => :put}, :member => {:change => :get, :activate => :put, :deactivate => :put, :revert => :put} do |re_pipeline|  
    re_pipeline.resources :re_rules, :collection => {:help => :get, :error => :get}, :member => {:move_up => :put, :move_down => :put}
    re_pipeline.resources :re_jobs, :controller => :re_pipeline_jobs, :only => [:index]
  end
  
  map.resources :re_jobs, :only => [:index, :show]
  ...
end  


***************************************************** 
*** install the rules_engine_users gem
***           OR 
*** define the 
*** EDIT app/controllers/application_controller.rb

class ApplicationController < ActionController::Base

  helper_method :rules_engine_reader?, :rules_engine_editor?
  
  def rules_engine_reader?
    return true
  end  
  
  def rules_engine_editor?
    return true
  end  

  def rules_engine_reader_access_required
    unless rules_engine_reader?    
      redirect_to(root_path) 
      flash[:success] = 'Rules Engine Access Denied.'
    end  
  end
  
  def rules_engine_editor_access_required
    unless rules_engine_editor?    
      redirect_to(root_path) 
      flash[:success] = 'Rules Engine Editor Access Denied.'
    end
  end

***************************************************** 
*** migrate the database

rake db:migrate


***************************************************** 
*** run the rspec tests

rake spec
rake spec:rcov
open coverage/index.html


***************************************************** 
*** run the cucumber tests

rake features


***************************************************** 
*** startup the server

./script/server
open http://localhost:3000/re_pipelines


***************************************************** 
*** create rules
