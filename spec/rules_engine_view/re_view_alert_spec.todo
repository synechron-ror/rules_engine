require File.expand_path(File.dirname(__FILE__) ) + "/../spec_helper"

describe "view_alert", :type => :helper do 
  def call_view_alert(error, success, notice)
    src = <<-END_SRC
    <% 
      flash[:error] = "#{error}"
      flash[:success] = "#{success}"
      flash[:notice] = "#{notice}"
    %>    
    <%= view_alert %>
    END_SRC
    eval_erb(src)
  end
  
  it "should be accessible to rails apps by default" do 
    ActionView::Base.new.methods.should include("view_alert")
  end
  
  describe "setting an error message" do
    it "should display the message" do
      call_view_alert("error", "", "").should have_tag('div.error strong', :text => "Error :")
      call_view_alert("<p>error</p>", "", "").should have_tag('div.error p', :text => "error")
    end

    it "should not display the success message or notice message" do
      call_view_alert("error", "success", "notice").should_not have_tag('div.success')
      call_view_alert("error", "success", "notice").should_not have_tag('div.notice')
    end

    it "should reset the error, success and notice message" do
      call_view_alert("error", "success", "notice")
      eval_erb("<%=flash[:error] %>").should == ""
      eval_erb("<%=flash[:success] %>").should == ""
      eval_erb("<%=flash[:notice] %>").should == ""
    end
  end

  describe "setting a success message" do
    it "should display the message" do
      call_view_alert("", "success", "").should have_tag('div.success strong', :text => "Success :")
      call_view_alert("", "<p>success</p>", "").should have_tag('div.success p', :text => "success")
    end

    it "should not display the notice message" do
      call_view_alert("", "success", "notice").should_not have_tag('div.notice')
    end

    it "should reset the success and notice message" do
      call_view_alert("", "success", "notice")
      eval_erb("<%=flash[:error] %>").should == ""
      eval_erb("<%=flash[:success] %>").should == ""
      eval_erb("<%=flash[:notice] %>").should == ""
    end
  end

  describe "setting a notice message" do
    it "should display the message" do
      call_view_alert("", "", "notice").should have_tag('div.notice strong', :text => "Warning :")
      call_view_alert("", "", "<p>notice</p>").should have_tag('div.notice p', :text => "notice")
    end

    it "should reset the notice message" do
      call_view_alert("", "", "notice")
      eval_erb("<%=flash[:notice] %>").should == ""
    end
  end
  
end

